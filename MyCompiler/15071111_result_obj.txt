.data
	.align 2
	_data_g_array_char: .space 3
	.align 2
	_data_g_array_int: .space 40
	.align 2
	_data_g_var_char1: .space 1
	.align 2
	_data_g_var_char2: .space 1
	.align 2
	_data_g_var_int1: .space 4
	.align 2
	_data_g_var_int2: .space 4
	_str_endl: .asciiz "\n"
	_str_0: .asciiz "test_printf 1:\n"
	_str_1: .asciiz "test_printf 2:a\n"
	_str_2: .asciiz "test_printf 3:3\n"
	_str_3: .asciiz "l\n"
	_str_4: .asciiz "2\n"
	_str_5: .asciiz "-------------------------------------------------------\n"
	_str_6: .asciiz "test_fun: four parameters: int i,j   char c,d\n"
	_str_7: .asciiz "test_fun: i="
	_str_8: .asciiz "test_fun: j="
	_str_9: .asciiz "test_fun: k="
	_str_10: .asciiz "test_fun: c="
	_str_11: .asciiz "test_fun: d="
	_str_12: .asciiz "------------------------------------------------------\n"
	_str_13: .asciiz "test_if: i=0, c='a'\n"
	_str_14: .asciiz "test_if: <  : i<1\n"
	_str_15: .asciiz "test_if: <= : i<=0\n"
	_str_16: .asciiz "test_if: == : i==0\n"
	_str_17: .asciiz "test_if: >  : i>-1\n"
	_str_18: .asciiz "test_if: >= : i>=0\n"
	_str_19: .asciiz "test_if: if(var char)\n"
	_str_20: .asciiz "test_if: if(var int)\n"
	_str_21: .asciiz "test_if: if(const char)\n"
	_str_22: .asciiz "test_if: if(const int !0)\n"
	_str_23: .asciiz "test_if: if(const int !0\n"
	_str_24: .asciiz "test_if: if(const int 0\n"
	_str_25: .asciiz "test_while: "
	_str_26: .asciiz "test_switch(i): i = 0\n"
	_str_27: .asciiz "test_switch(i): i = 1\n"
	_str_28: .asciiz "test_switch(i): i = 'a'\n"
	_str_29: .asciiz "test_switch(i): i = +2\n"
	_str_30: .asciiz "test_switch(i): i = -3\n"
	_str_31: .asciiz "test_switch(i): default\n"
	_str_32: .asciiz "test assign statement:---------------\n"
	_str_33: .asciiz "g_array_char[0] = "
	_str_34: .asciiz "g_array_char[1] = "
	_str_35: .asciiz "g_array_char[2] = "
	_str_36: .asciiz "g_var_int1 = "
	_str_37: .asciiz "g_var_int2 = "
	_str_38: .asciiz "g_var_char1 = "
	_str_39: .asciiz "g_var_char2 = "
	_str_40: .asciiz "test global and local same name ident:\n"
	_str_41: .asciiz "sameName in main: "
	_str_42: .asciiz "test scanf: input n:\n"
	_str_43: .asciiz "Fibnaci result of n "
	_str_44: .asciiz "test expression statement:------------\n"
	_str_45: .asciiz "complex expression: f = "
	_str_46: .asciiz "set global array of int values:\n"
	_str_47: .asciiz "print global array of int values:\n"
	_str_48: .asciiz "g_array_int[i] = "
.text
	j main_lb0
 fun_lb2:
	sw $ra, 0($sp)
	li $v0, 97
	lw $ra, 0($sp)
	addi $sp, $sp, 12
	jr $ra
 fun_lb3:
	sw $ra, 0($sp)
	li $v0, 195
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
 fun_lb4:
	sw $ra, 0($sp)
	# print
	li $v0, 4
	la $a0, _str_0
	syscall
	# print
	li $v0, 4
	la $a0, _str_1
	syscall
	# print
	li $v0, 4
	la $a0, _str_2
	syscall
	# print
	li $v0, 4
	la $a0, _str_3
	syscall
	# print
	li $v0, 4
	la $a0, _str_4
	syscall
	# print
	li $v0, 4
	la $a0, _str_5
	syscall
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
 fun_lb5:
	sw $ra, 0($sp)
	# print
	li $v0, 4
	la $a0, _str_6
	syscall
	# print
	li $v0, 4
	la $a0, _str_7
	syscall
	li $v0, 1
	lw $a0, 4($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_8
	syscall
	li $v0, 1
	lw $a0, 8($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_9
	syscall
	li $v0, 1
	lw $a0, 12($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_10
	syscall
	li $v0, 11
	lb $a0, 16($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_11
	syscall
	li $v0, 11
	lb $a0, 20($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_12
	syscall
	lw $ra, 0($sp)
	addi $sp, $sp, 24
	jr $ra
 fun_lb6:
	sw $ra, 0($sp)
	# print
	li $v0, 4
	la $a0, _str_13
	syscall
	li $t0, 0
	li $t1, 1
	bge $t0, $t1, end_if_lb7
	# print
	li $v0, 4
	la $a0, _str_14
	syscall
 end_if_lb7:
	li $t0, 0
	li $t1, 0
	bgt $t0, $t1, end_if_lb8
	# print
	li $v0, 4
	la $a0, _str_15
	syscall
 end_if_lb8:
	li $t0, 0
	li $t1, 0
	bne $t0, $t1, end_if_lb9
	# print
	li $v0, 4
	la $a0, _str_16
	syscall
 end_if_lb9:
	li $t0, 0
	li $t1, -1
	ble $t0, $t1, end_if_lb10
	# print
	li $v0, 4
	la $a0, _str_17
	syscall
 end_if_lb10:
	li $t0, 0
	li $t1, 0
	blt $t0, $t1, end_if_lb11
	# print
	li $v0, 4
	la $a0, _str_18
	syscall
 end_if_lb11:
	li $t0, 97
	beqz $t0, end_if_lb12
	# print
	li $v0, 4
	la $a0, _str_19
	syscall
 end_if_lb12:
	li $t0, 0
	beqz $t0, end_if_lb13
	# print
	li $v0, 4
	la $a0, _str_20
	syscall
 end_if_lb13:
	li $t0, 97
	beqz $t0, end_if_lb14
	# print
	li $v0, 4
	la $a0, _str_21
	syscall
 end_if_lb14:
	li $t0, 1
	beqz $t0, end_if_lb15
	# print
	li $v0, 4
	la $a0, _str_22
	syscall
 end_if_lb15:
	li $t0, -1
	beqz $t0, end_if_lb16
	# print
	li $v0, 4
	la $a0, _str_23
	syscall
 end_if_lb16:
	li $t0, 0
	beqz $t0, end_if_lb17
	# print
	li $v0, 4
	la $a0, _str_24
	syscall
 end_if_lb17:
	# print
	li $v0, 4
	la $a0, _str_5
	syscall
	li $t0, 0
	beqz $t0, end_if_lb18
 end_if_lb18:
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	jr $ra
 fun_lb19:
	sw $ra, 0($sp)
	li $t0, 0
	sw $t0, 4($sp)
 while_lb21:
	lw $t0, 4($sp)
	li $t1, 5
	bge $t0, $t1, end_while_lb20
	# print
	li $v0, 4
	la $a0, _str_25
	syscall
	li $v0, 1
	lw $a0, 4($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# calc
	lw $t0, 4($sp)
	li $t1, 1
	add $t0, $t0, $t1
	sw $t0, 8($sp)
	lw $t0, 8($sp)
	sw $t0, 4($sp)
	j while_lb21
 end_while_lb20:
	# print
	li $v0, 4
	la $a0, _str_5
	syscall
	lw $ra, 0($sp)
	addi $sp, $sp, 12
	jr $ra
 fun_lb22:
	sw $ra, 0($sp)
	lw $t0, 4($sp)
	li $t1, 0
	bne $t0, $t1, end_case_lb24
	# print
	li $v0, 4
	la $a0, _str_26
	syscall
	j end_switch_lb23
 end_case_lb24:
	lw $t0, 4($sp)
	li $t1, 1
	bne $t0, $t1, end_case_lb25
	# print
	li $v0, 4
	la $a0, _str_27
	syscall
	j end_switch_lb23
 end_case_lb25:
	lw $t0, 4($sp)
	li $t1, 97
	bne $t0, $t1, end_case_lb26
	# print
	li $v0, 4
	la $a0, _str_28
	syscall
	j end_switch_lb23
 end_case_lb26:
	lw $t0, 4($sp)
	li $t1, 2
	bne $t0, $t1, end_case_lb27
	# print
	li $v0, 4
	la $a0, _str_29
	syscall
	j end_switch_lb23
 end_case_lb27:
	lw $t0, 4($sp)
	li $t1, -3
	bne $t0, $t1, end_case_lb28
	# print
	li $v0, 4
	la $a0, _str_30
	syscall
	j end_switch_lb23
 end_case_lb28:
	# print
	li $v0, 4
	la $a0, _str_31
	syscall
 end_switch_lb23:
	# print
	li $v0, 4
	la $a0, _str_5
	syscall
	lw $ra, 0($sp)
	addi $sp, $sp, 8
	jr $ra
 fun_lb29:
	sw $ra, 0($sp)
	lw $t0, 4($sp)
	li $t1, 1
	bne $t0, $t1, end_if_lb30
	li $v0, 1
	lw $ra, 0($sp)
	addi $sp, $sp, 28
	jr $ra
 end_if_lb30:
	lw $t0, 4($sp)
	li $t1, 2
	bne $t0, $t1, end_if_lb31
	li $v0, 1
	lw $ra, 0($sp)
	addi $sp, $sp, 28
	jr $ra
 end_if_lb31:
	# calc
	lw $t0, 4($sp)
	li $t1, 1
	sub $t0, $t0, $t1
	sw $t0, 8($sp)
	move $fp, $sp
	subi $sp, $sp, 28
	lw $t0, 8($fp)
	sw $t0, 4($sp)
	# call
	jal fun_lb29
	sw $v0, 12($sp)
	# calc
	lw $t0, 4($sp)
	li $t1, 2
	sub $t0, $t0, $t1
	sw $t0, 16($sp)
	move $fp, $sp
	subi $sp, $sp, 28
	lw $t0, 16($fp)
	sw $t0, 4($sp)
	# call
	jal fun_lb29
	sw $v0, 20($sp)
	# calc
	lw $t0, 12($sp)
	lw $t1, 20($sp)
	add $t0, $t0, $t1
	sw $t0, 24($sp)
	lw $v0, 24($sp)
	lw $ra, 0($sp)
	addi $sp, $sp, 28
	jr $ra
 main_lb0:
	li $t0, 1
	sw $t0, 4($sp)
	li $t0, 2
	sw $t0, 8($sp)
	li $t0, 3
	sw $t0, 12($sp)
	li $t0, 97
	sb $t0, _data_g_array_char+0
	li $t0, 98
	sb $t0, _data_g_array_char+1
	move $fp, $sp
	subi $sp, $sp, 12
	# call
	jal fun_lb2
	sb $v0, 20($sp)
	lb $t0, 20($sp)
	sb $t0, _data_g_array_char+2
	move $fp, $sp
	subi $sp, $sp, 4
	# call
	jal fun_lb3
	sw $v0, 24($sp)
	lw $t0, 24($sp)
	sw $t0, 16($sp)
	li $t0, 6
	sw $t0, _data_g_var_int1
	li $t0, 11
	sw $t0, _data_g_var_int2
	# print
	li $v0, 4
	la $a0, _str_32
	syscall
	lw $t0, 28($sp)
	lb $t0, _data_g_array_char+0
	sw $t0, 28($sp)
	# print
	li $v0, 4
	la $a0, _str_33
	syscall
	li $v0, 1
	lw $a0, 28($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	lw $t0, 32($sp)
	lb $t0, _data_g_array_char+1
	sw $t0, 32($sp)
	# print
	li $v0, 4
	la $a0, _str_34
	syscall
	li $v0, 1
	lw $a0, 32($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	lw $t0, 36($sp)
	lb $t0, _data_g_array_char+2
	sw $t0, 36($sp)
	# print
	li $v0, 4
	la $a0, _str_35
	syscall
	li $v0, 1
	lw $a0, 36($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_36
	syscall
	li $v0, 1
	lw $a0, _data_g_var_int1
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_37
	syscall
	li $v0, 1
	lw $a0, _data_g_var_int2
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	lw $t0, 40($sp)
	lb $t0, _data_g_array_char+0
	sw $t0, 40($sp)
	lw $t0, 44($sp)
	lb $t0, _data_g_array_char+1
	sw $t0, 44($sp)
	# calc
	lw $t0, 40($sp)
	lw $t1, 44($sp)
	add $t0, $t0, $t1
	sw $t0, 48($sp)
	lw $t0, 48($sp)
	sw $t0, _data_g_var_int1
	lw $t0, 52($sp)
	lb $t0, _data_g_array_char+2
	sw $t0, 52($sp)
	lw $t0, 56($sp)
	lb $t0, _data_g_array_char+0
	sw $t0, 56($sp)
	# calc
	lw $t0, 52($sp)
	lw $t1, 56($sp)
	sub $t0, $t0, $t1
	sw $t0, 60($sp)
	lw $t0, 60($sp)
	sw $t0, _data_g_var_int2
	# print
	li $v0, 4
	la $a0, _str_36
	syscall
	li $v0, 1
	lw $a0, _data_g_var_int1
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_37
	syscall
	li $v0, 1
	lw $a0, _data_g_var_int2
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	li $t0, 122
	sb $t0, _data_g_var_char1
	li $t0, 120
	sb $t0, _data_g_var_char2
	# print
	li $v0, 4
	la $a0, _str_38
	syscall
	li $v0, 11
	lb $a0, _data_g_var_char1
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_39
	syscall
	li $v0, 11
	lb $a0, _data_g_var_char2
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_40
	syscall
	# print
	li $v0, 4
	la $a0, _str_41
	syscall
	li $v0, 1
	lw $a0, 16($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_42
	syscall
	# read
	li $v0, 5
	syscall
	sw $v0, 8($sp)
	move $fp, $sp
	subi $sp, $sp, 28
	lw $t0, 8($fp)
	sw $t0, 4($sp)
	# call
	jal fun_lb29
	sw $v0, 64($sp)
	# print
	li $v0, 4
	la $a0, _str_43
	syscall
	li $v0, 1
	lw $a0, 64($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_44
	syscall
	move $fp, $sp
	subi $sp, $sp, 28
	lw $t0, 8($fp)
	sw $t0, 4($sp)
	# call
	jal fun_lb29
	sw $v0, 68($sp)
	lw $t0, 68($sp)
	sw $t0, 12($sp)
	move $fp, $sp
	subi $sp, $sp, 28
	lw $t0, 8($fp)
	sw $t0, 4($sp)
	# call
	jal fun_lb29
	sw $v0, 72($sp)
	# calc
	lw $t0, 4($sp)
	lw $t1, 8($sp)
	mul $t0, $t0, $t1
	sw $t0, 76($sp)
	# calc
	lw $t0, 76($sp)
	li $t1, -5
	div $t0, $t1
	mflo $t0
	sw $t0, 80($sp)
	# calc
	lw $t0, 80($sp)
	li $t1, 6
	mul $t0, $t0, $t1
	sw $t0, 84($sp)
	# calc
	lw $t0, 72($sp)
	lw $t1, 84($sp)
	add $t0, $t0, $t1
	sw $t0, 88($sp)
	# calc
	lw $t0, 4($sp)
	li $t1, -6
	div $t0, $t1
	mflo $t0
	sw $t0, 92($sp)
	# calc
	lw $t0, 92($sp)
	lw $t1, 8($sp)
	div $t0, $t1
	mflo $t0
	sw $t0, 96($sp)
	# calc
	lw $t0, 96($sp)
	li $t1, 2
	mul $t0, $t0, $t1
	sw $t0, 100($sp)
	move $fp, $sp
	subi $sp, $sp, 28
	li $t0, 3
	sw $t0, 4($sp)
	# call
	jal fun_lb29
	sw $v0, 104($sp)
	# calc
	lw $t0, 100($sp)
	lw $t1, 104($sp)
	mul $t0, $t0, $t1
	sw $t0, 108($sp)
	# calc
	lw $t0, 108($sp)
	li $t1, 6
	mul $t0, $t0, $t1
	sw $t0, 112($sp)
	# calc
	lw $t0, 88($sp)
	lw $t1, 112($sp)
	sub $t0, $t0, $t1
	sw $t0, 116($sp)
	lw $t0, 116($sp)
	sw $t0, 12($sp)
	# print
	li $v0, 4
	la $a0, _str_45
	syscall
	li $v0, 1
	lw $a0, 12($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# print
	li $v0, 4
	la $a0, _str_46
	syscall
 while_lb33:
	lw $t0, 4($sp)
	li $t1, 10
	bge $t0, $t1, end_while_lb32
	# calc
	lw $t0, 4($sp)
	li $t1, 1
	add $t0, $t0, $t1
	sw $t0, 120($sp)
	lw $t0, 120($sp)
	lw $t1, 4($sp)
	sll $t2, $t1, 2
	sw $t0, _data_g_array_int($t2)
	# calc
	lw $t0, 4($sp)
	li $t1, 1
	add $t0, $t0, $t1
	sw $t0, 124($sp)
	lw $t0, 124($sp)
	sw $t0, 4($sp)
	j while_lb33
 end_while_lb32:
	# print
	li $v0, 4
	la $a0, _str_47
	syscall
 while_lb35:
	lw $t0, 4($sp)
	li $t1, 10
	bge $t0, $t1, end_while_lb34
	lw $t0, 128($sp)
	lw $t1, 4($sp)
	sll $t2, $t1, 2
	lw $t0, _data_g_array_int($t2)
	sw $t0, 128($sp)
	# print
	li $v0, 4
	la $a0, _str_48
	syscall
	li $v0, 1
	lw $a0, 128($sp)
	syscall
	li $v0, 4
	la $a0, _str_endl
	syscall
	# calc
	lw $t0, 4($sp)
	li $t1, 1
	add $t0, $t0, $t1
	sw $t0, 132($sp)
	lw $t0, 132($sp)
	sw $t0, 4($sp)
	j while_lb35
 end_while_lb34:
	move $fp, $sp
	subi $sp, $sp, 4
	# call
	jal fun_lb4
	move $fp, $sp
	subi $sp, $sp, 28
	lw $t0, 8($fp)
	sw $t0, 4($sp)
	# call
	jal fun_lb29
	sw $v0, 136($sp)
	move $fp, $sp
	subi $sp, $sp, 24
	lw $t0, 136($fp)
	sw $t0, 4($sp)
	lw $t0, 4($fp)
	sw $t0, 8($sp)
	li $t0, 2
	sw $t0, 12($sp)
	li $t0, 97
	sw $t0, 16($sp)
	li $t0, 97
	sw $t0, 20($sp)
	# call
	jal fun_lb5
	move $fp, $sp
	subi $sp, $sp, 4
	# call
	jal fun_lb6
	move $fp, $sp
	subi $sp, $sp, 8
	li $t0, 1
	sw $t0, 4($sp)
	# call
	jal fun_lb22
	move $fp, $sp
	subi $sp, $sp, 8
	li $t0, 2
	sw $t0, 4($sp)
	# call
	jal fun_lb22
	move $fp, $sp
	subi $sp, $sp, 8
	li $t0, 3
	sw $t0, 4($sp)
	# call
	jal fun_lb22
	move $fp, $sp
	subi $sp, $sp, 8
	li $t0, 97
	sw $t0, 4($sp)
	# call
	jal fun_lb22
	move $fp, $sp
	subi $sp, $sp, 12
	# call
	jal fun_lb19
 end_main_lb1:
